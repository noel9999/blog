<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Programming | Noel Saga]]></title>
  <link href="http://noelsaga.herokuapp.com/blog/categories/programming/atom.xml" rel="self"/>
  <link href="http://noelsaga.herokuapp.com/"/>
  <updated>2015-07-23T02:14:15+08:00</updated>
  <id>http://noelsaga.herokuapp.com/</id>
  <author>
    <name><![CDATA[Noel]]></name>
    <email><![CDATA[terrorer9999@hotmail]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[使用pre-commit來修煉codestyle]]></title>
    <link href="http://noelsaga.herokuapp.com/blog/2015/07/22/shi-yong-pre-commitlai-xiu-lian-codestyle/"/>
    <updated>2015-07-22T01:35:26+08:00</updated>
    <id>http://noelsaga.herokuapp.com/blog/2015/07/22/shi-yong-pre-commitlai-xiu-lian-codestyle</id>
    <content type="html"><![CDATA[<p>想寫出有<strong>執行效率</strong>、又<strong>簡潔易讀</strong>、<del>又潮</del>的ruby codestyle嗎？</p>

<p>雖然不是人人都有大神幫忙做code review，但慶幸ruby有<code>rubocop</code>可以用，裡面可以偵測我們的code是否有符合ruby codestyle的最適規範，而且還可以搭配<code>pre-commit</code>，這個gem來幫我們做到每次提交commit前先掃描我們的code，看看是否有符合codestyle，沒有符合的話就不給commit，希望借此養成良好的codestyle！</p>

<!--more-->


<h3>1. 首先安裝gem</h3>

<p><code>
gem 'pre-commit', require: false
gem 'rubocop', require: false
</code></p>

<h3>2.新增檔案 rails_project/.robocup.yml</h3>

<p>這部份我都是手動新增的，裡面定義了一些基礎的客製化規範，照抄前輩挑選的，大家如果沒特定需求也可以照抄
{% codeblock lang:yml %}
AllCops:
  RunRailsCops: true
  Exclude:</p>

<pre><code>- db/schema.rb
</code></pre>

<p>Metrics/LineLength:
  Max: 120</p>

<p>Metrics/MethodLength:
  Max: 20</p>

<p>Metrics/ClassLength:
  Max: 250</p>

<p>Style/AsciiComments:
  Enabled: false</p>

<p>Style/ClassAndModuleChildren:
  EnforcedStyle: compact</p>

<p>Style/Documentation:
  Enabled: false</p>

<p>Style/IfUnlessModifier:
  Enabled: false
{% endcodeblock %}</p>

<h3>3.新增檔案 config/pre_commit.yml</h3>

<h2>{% codeblock lang:yml %}</h2>

<p>:checks_remove: []
:checks_add:
&ndash; :tabs
&ndash; :nb_space
&ndash; :whitespace
&ndash; :merge_conflict
&ndash; :debugger
&ndash; :pry
&ndash; :local
&ndash; :jshint
&ndash; :console_log
&ndash; :migration
&ndash; :rubocop
{% endcodeblock %}</p>

<h3>4. 執行<code>pre-commit install</code></h3>

<p>之後，每次開始提交commit就會在terminal下看到執行的結果了！然後就乖乖的養成良好的習慣慢慢改吧，雖然一開始會不習慣，但是之後會發現真的挺受用的！<br/>
如果有看不懂的提示也可以去Google找或是去<a href="https://github.com/bbatsov/ruby-style-guide#underscore-unused-vars">ruby-style-guide</a>翻閱看看，裡面都有解釋為何這樣設計或是範例。</p>

<h3>5.補充</h3>

<p>若想偷懶強制commit上去可以加上參數<code>-n</code></p>

<p><code>git commit -am 'some message' -n</code></p>

<h3>參考：<a href="https://github.com/jish/pre-commit">github: pre-commit</a></h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[開發中，常見的參數payload是什麼?]]></title>
    <link href="http://noelsaga.herokuapp.com/blog/2015/07/18/kai-fa-zhong-,chang-jian-de-can-shu-payloadshi-shi-mo/"/>
    <updated>2015-07-18T02:34:43+08:00</updated>
    <id>http://noelsaga.herokuapp.com/blog/2015/07/18/kai-fa-zhong-,chang-jian-de-can-shu-payloadshi-shi-mo</id>
    <content type="html"><![CDATA[<p>開發中，常常見到許多文件裡的方法或函式帶有名為<code>payload</code>的參數，像是最近在因為新專案開始使用了<code>react.js</code>+<code>flux</code>，正在看前輩的code學習與<del>觀摩中</del>，就非常常見到payload這參數，直覺想到『
啊這個字就是負載量啊!?沒什麼的嘛』但其實知道他英文叫做負載量但我還是不知道這參數是要幹什麼的，或是為什麼要這樣取名，不直接叫<code>data</code>, <code>params</code>之類的。甚至不小心在看pg官方文件裡又出現payload這個參數名，讓我更驚覺到原來不是只有<code>flux</code>裡面這樣用，別的地方也會這樣命名，也意味著這其實是個常見且通用的使用名詞，所以還是來個一探究竟的好。</p>

<!--more-->


<hr />

<h2>Payload的定義</h2>

<p>payload意思即為承載量，在開發中則是指出在一堆資料中我們所<strong><em>關心</em></strong>的部分!</p>

<p>網路找到的定義為：</p>

<blockquote><p>On the Internet, a payload is either: The essential data that is being carried within a packet or other transmission unit.</p></blockquote>

<h2>Payload的由來</h2>

<p>google到一篇很好的文章對payload為何這樣叫有很好的解釋，文中指出這個名詞是借用運輸工具上的觀念而來的，例如：卡車、油罐車、貨輪等所謂的<strong>載具</strong>，然後通常一個載具的總重量一定<strong>大於</strong>載具的承載量，例如油罐車的總重量包含了他所運載的油量、司機的重量、油罐車行駛所需的油量，但我們所關心僅是油罐車所承載的油量而已。</p>

<p><del>故，得證</del></p>

<blockquote><p>Payload, the load that pays</p></blockquote>

<p>對programming來說，我們可以某api的response為例子來看</p>

<p>{% codeblock lang:js %}</p>

<pre><code>{
    "status":"OK",
    "data":
        {
            "message":"Hello, world!"
        }
}
</code></pre>

<p>{% endcodeblock %}</p>

<p> 其中的Hello, world!正是payload，也是我們關心的部分。</p>

<p> 到這裡我們應該了解為何參數名要叫做<code>payload</code>，而非<code>data</code>或是<code>params</code>是有其目的性的，而更進一步的熟悉與使用payload這個參數，則就要再深入看該方法或函式的使用與定義了。</p>

<h2>參考</h2>

<p><a href="http://programmers.stackexchange.com/questions/158603/what-does-the-term-payload-mean-in-programming">文中的解釋與例子出處</a></p>
]]></content>
  </entry>
  
</feed>
