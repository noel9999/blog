<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Noel Saga]]></title>
  <link href="http://noelsaga.herokuapp.com/atom.xml" rel="self"/>
  <link href="http://noelsaga.herokuapp.com/"/>
  <updated>2014-09-20T02:16:18+08:00</updated>
  <id>http://noelsaga.herokuapp.com/</id>
  <author>
    <name><![CDATA[Noel]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Javascript Function]]></title>
    <link href="http://noelsaga.herokuapp.com/blog/2014/08/24/javascript-function/"/>
    <updated>2014-08-24T20:16:53+08:00</updated>
    <id>http://noelsaga.herokuapp.com/blog/2014/08/24/javascript-function</id>
    <content type="html"><![CDATA[<br>


<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Javascript(以下簡稱JS)的函式比以往所認識語言C, JAVA, PHP來得特別些。因為第一份工作主要都是在寫Rails所以接觸Ruby，覺得這語言很酷很方便，然後也因為今年開始自學JQuery也順便想弄懂Javascript的原理而開始接觸，之前有朋友說其實Ruby有些地方是從Javascript借鏡的，當時因為對JS還很不熟，所以也沒體會，但隨著看的範例多跟練習越來越多，也開始有所感觸，所以也趁著這機會記錄一下JS相關的function應用：</p>

<figure class='code'><figcaption><span>一般使用 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">function</span> <span class="nx">godzilla</span><span class="p">(</span><span class="nx">food</span><span class="p">){</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;I eat the &#39;</span><span class="o">+</span><span class="nx">food</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;I am a monster!&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="c1">// godzilla(&#39;fish&#39;);</span>
</span><span class='line'>    <span class="c1">//I eat the fish   </span>
</span><span class='line'>    <span class="c1">//I am a monster！</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;這是最基本的使用方式，跟其他語言大致相當</p>

<!-- more -->


<hr />

<h2>匿名Function</h2>

<br>


<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;也就是所謂的匿名函式，為什麼稱作匿名呢？那是因為對JS來說function本身可以視為一個物件（它也確實是個物件），而我們把JS的function視為一個可傳遞的值或物件，所以我們也就可以把它傳入一個變數或是當做參數使用：</p>

<p> <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'> <span class="kd">var</span> <span class="nx">godzilla</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">food</span><span class="p">){</span>
</span><span class='line'>   <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;I eat the &#39;</span><span class="o">+</span><span class="nx">food</span><span class="p">);</span>
</span><span class='line'>   <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;I am a monster!&#39;</span><span class="p">);</span>
</span><span class='line'> <span class="p">}</span>
</span><span class='line'> <span class="k">typeof</span> <span class="nx">godzilla</span>
</span><span class='line'> <span class="c1">// &quot;function&quot;</span>
</span><span class='line'> <span class="nx">godzilla</span><span class="p">(</span><span class="s1">&#39;fish&#39;</span><span class="p">);</span>
</span><span class='line'>   <span class="c1">//I eat the fish   </span>
</span><span class='line'>   <span class="c1">//I am a monster！</span>
</span></code></pre></td></tr></table></div></figure></p>

<br>


<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;當然，可以塞入一個變數，那我們就可以像是變數一樣的任意使用它，又或著是把它來當做參數給另一個變數做callback使用：</p>

<p> <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">function</span> <span class="nx">monstersShow</span><span class="p">(</span><span class="nx">monster</span><span class="p">,</span> <span class="nx">godzilla</span><span class="p">){</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;I am the &#39;</span><span class="o">+</span> <span class="nx">monster</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">godzilla</span><span class="p">();</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="nx">monstersShow</span><span class="p">(</span><span class="s1">&#39;KingKong&#39;</span><span class="p">,</span> <span class="nx">godzilla</span><span class="p">);</span>
</span><span class='line'><span class="c1">// I am the KingKong </span>
</span><span class='line'><span class="c1">// I eat the undefined</span>
</span><span class='line'><span class="c1">// I am a monster! </span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure></p>

<br>


<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;上述作法其實比較多此一舉，因為既然它是可以是個物件，那其實在當參數使用的時候也不見得需要在把它先塞到一的變數，而是在呼叫該function的時候直接定義欲傳入function，所以我們可以直接寫：</p>

<p> <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nx">monstersShow</span><span class="p">(</span><span class="s1">&#39;KingKong&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="kd">function</span><span class="p">(</span><span class="nx">food</span><span class="p">){</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;I eat the &#39;</span><span class="o">+</span><span class="nx">food</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;I am a monster!&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">);</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure></p>

<br>


<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;直接這樣寫也可以work，而且這種作法在JQuery的event handler相當常見；此外在ruby時，我們所使用的Proc, lambda其實就是承襲JS的匿名函式過來的，當然啦，當初Matz是不是真的被JS啟發我也不確定啦～</p>

<p> 如果要更謹慎地使用callback，可以這樣：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'>   <span class="kd">function</span> <span class="nx">godzilla</span><span class="p">(</span><span class="nx">food</span><span class="p">,</span> <span class="nx">callback</span><span class="p">){</span>
</span><span class='line'>     <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;I want to eat &#39;</span><span class="o">+</span> <span class="nx">food</span><span class="p">);</span>
</span><span class='line'>     <span class="k">if</span><span class="p">(</span> <span class="k">typeof</span><span class="p">(</span><span class="nx">callback</span><span class="p">)</span> <span class="o">==</span> <span class="s1">&#39;function&#39;</span><span class="p">){</span> <span class="c1">//判斷callback是否為function</span>
</span><span class='line'>       <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;callback is actually a function, then we would execute it..&#39;</span><span class="p">);</span>
</span><span class='line'>       <span class="nx">callback</span><span class="p">();</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>   <span class="p">}</span>
</span><span class='line'>  <span class="nx">godzilla</span><span class="p">(</span><span class="s1">&#39;fish&#39;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Dear Doctort, you made it!&#39;</span><span class="p">);</span> <span class="p">});</span>
</span><span class='line'>  <span class="c1">// 輸出</span>
</span><span class='line'>  <span class="c1">// I want to eat fish</span>
</span><span class='line'>  <span class="c1">// Dear Doctort, you made it!</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<br>   


<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;更理解了嗎？其實callback就只是個參數代稱而已，你想怎麼稱呼它都可以，原理是你只要想像你欲傳遞的function全都被指定給callback，然後再以callback()來使用傳遞進去的function。</p>

<hr />

<h2>Function的參數陣列arugments</h2>

<br>


<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在JS中的function其實都有個預設好的陣列參數arguments，我們都知道相對於C家族的語言，JS是很自由的，像是在呼叫的function時，即使多傳幾個沒定義的參數，程式也不會噴錯，或是明明設有參數的function，直接不帶參數呼叫該function，也是不會噴錯，只是需要用到該參數的地方會顯示undefined而已。</p>

<br>


<p> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;然而，剛剛都只是題外話，JS的function真正酷的地方在那個預設的陣列參數arugments，其實他不是真正的參數也不是個真的陣列，我知道這樣講很抽像，但只要把它想成event在 event handler裡的這個事件物件的參數就很好懂了；而這邊這個arguments也有個屬性叫做length，顧名思義就是你傳入這個function的參數長度，而我們傳入的參數其實也可以藉由arguments[i]來呼叫。所以也可以把它想做你傳入的參數其實全都存到這個arguments陣列裡去了，那我們在定義一個JS的function時，其實你不用事先定義任何傳入的參數也可以，然後可以直接靠arguments來取用你強行塞進去這個function裡的參數，但是這樣做不見得是個好方法就是，因為你必須很清楚你傳入的參數位置為何，老是這樣argument[0], argument[1]的呼叫似乎有點不易閱讀；直接看個例子吧：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">arrayPlus</span><span class="p">(){</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">total</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>    <span class="nx">total</span> <span class="o">+=</span> <span class="nx">arguments</span><span class="p">[</span><span class="nx">i</span><span class="p">];</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">total</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">arrayPlus</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">)</span>
</span><span class='line'><span class="c1">// 15</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<br>  


<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;arguments當然還有其他功用，但這就得自己多去摸索了，如果想更詳細了解arguments也可以去查文件囉！</p>

<br>


<hr />

<h2>進階範例：運用Prototype和Callback來自定forEach給Array</h2>

<br>


<p>   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在JQuery跟Ruby裡都已經預設有forEach或each等方便給array或hash使用的方法，簡單地說，此function會直接迭代呼叫它的array或hash內的元素並傳給它本身的callback方法，像是[1,2,3,4,5].forEach(function(element){ console.log(element);} )，其中傳給forEach的參數匿名function正是之前提到的callback方法（一般來說就是可當參數傳入使用的方法），而該function的參數element正是被迭代入的array或hash元素。</p>

<br>


<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;這個forEach等會自動走訪array或hash的元素並且讓他們執行某callback是種直覺右方變得用法，在以前的JAVA或PHP要做到同樣的事寫起來就比較麻煩，code會多好幾行甚至可能數以倍計，而到底這種方便的方法是怎麼被實作入JS的勒，用以下的範例來試試看吧！！在之中我們會先用到prototype這物件來實現JS的繼承功能（把想被繼承的方法或屬性塞入給prototype就可以了，更深入了解prototype將會在另外討論）:
 <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">myEach</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">callback</span><span class="p">){</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">){</span>
</span><span class='line'>  <span class="nx">callback</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">i</span><span class="p">]);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">};</span><span class="c1">//這邊是先定義myEach並且透過prototype指定給Array，讓之後所有的Array都可以用此方法</span>
</span><span class='line'><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">].</span><span class="nx">myEach</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">element</span><span class="p">){</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">element</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'><span class="c1">//輸出</span>
</span><span class='line'><span class="c1">//1</span>
</span><span class='line'><span class="c1">//2</span>
</span><span class='line'><span class="c1">//3</span>
</span><span class='line'><span class="c1">//4</span>
</span><span class='line'><span class="c1">//5</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure></p>

<br>     


<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;這是我之前的高手同事建議我如果有興趣可以去深入探討的地方，可以去多研究Design Patterns，看看JQuery或是JS一些方便、優秀的功能是如何實作出的，對JS的功力會有所幫助！</p>

<br>


<hr />

<h2>Function的其他使用 &ndash; 自我調用（Self-Invoking）</h2>

<br>


<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;簡單地說就是宣告完function便利及執行，而且該function只會執行一次，之後無法在用，有點像oop的建構子的概念:
 <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">drink</span><span class="p">){</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;I like to have a cup of &#39;</span><span class="o">+</span> <span class="nx">drink</span><span class="p">);</span>
</span><span class='line'><span class="p">})(</span><span class="s1">&#39;ice tea&#39;</span><span class="p">);</span>
</span><span class='line'><span class="c1">// 輸出</span>
</span><span class='line'><span class="c1">// &#39;I like to have a cup of ice tea&#39;</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>
 <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;這有什麼用處呢？一般是用來初始化或是只需執行一次的任務，但其實本人自己也沒用過幾次，所以就先學起來吧。
 <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">drink</span><span class="p">){</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;I like to hava a cup of &#39;</span><span class="o">+</span> <span class="nx">drink</span><span class="p">);</span>
</span><span class='line'><span class="p">}(</span><span class="s1">&#39;ice tea&#39;</span><span class="p">);</span>
</span><span class='line'><span class="c1">// 輸出</span>
</span><span class='line'><span class="c1">// I like to have a cup of ice tea</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>
 <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;這樣寫也work，但是好像更多此一舉了點就是。</p>

<hr />

<h2>Function的其他使用 &ndash; 內部函數</h2>

<br>


<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;簡單地說，就是function裡面又定義function，而在內部的function就稱為內部或私有function，不能被直接呼叫，而內部function的範圍內的變數也無法被外部function所存取使用。另一方面，對於內部function來說，則有發生closure（閉包）的機會，就是內部function可以存取外部function的閒置變數，拿近來使用，因此延長了該閒置變數的存活期間，詳細的closure介紹與使用如果有機會再另外做記錄，這裡先來給個簡單的範例：</p>

<p> <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">function</span> <span class="nx">outer</span><span class="p">(){</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">outerSpace</span> <span class="o">=</span> <span class="s1">&#39;space godzilla&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">outerSpace</span> <span class="o">+</span> <span class="s1">&#39;is a super monster!&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">inner</span><span class="p">(){</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">innerSpace</span> <span class="o">=</span> <span class="s1">&#39;Just godzilla&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">innerSpace</span> <span class="o">+</span> <span class="s1">&#39;is local monster and &#39;</span> <span class="o">+</span> <span class="nx">outerSpace</span> <span class="o">+</span> <span class="s1">&#39;is not!&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">inner</span><span class="p">();</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">inner</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">outer</span><span class="p">();</span>
</span><span class='line'><span class="c1">// 輸出</span>
</span><span class='line'><span class="c1">// space godzillais a super monster!</span>
</span><span class='line'><span class="c1">// Just godzillais local monster and space godzillais not! </span>
</span><span class='line'><span class="nx">inner</span><span class="p">();</span>
</span><span class='line'><span class="c1">// ReferenceError: inner is not defined   失敗</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">getInner</span> <span class="o">=</span> <span class="nx">outer</span><span class="p">();</span>
</span><span class='line'><span class="c1">// space godzillais a super monster!                                             </span>
</span><span class='line'><span class="c1">// Just godzillais local monster and space godzillais not! </span>
</span><span class='line'><span class="nx">getInner</span><span class="p">();</span>
</span><span class='line'><span class="c1">// Just godzillais local monster and space godzillais not! </span>
</span><span class='line'><span class="nx">outer</span><span class="p">()();</span>
</span><span class='line'><span class="c1">// space godzillais a super monster!</span>
</span><span class='line'><span class="c1">// Just godzillais local monster and space godzillais not! </span>
</span><span class='line'><span class="c1">// Just godzillais local monster and space godzillais not!     多出現了一次</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure></p>

<br>


<p>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;來解釋吧，當第一次直接呼叫outer()時，結果很直覺的就是跑了它該跑的。那我想直接呼叫inner的話勒，則會顯示失敗的錯誤訊息，因為內部function不能直接使用。然後接著我再17行的地方又把outer()的回傳結果傳給變數getInner，因為第9行outer有定義return Inner，所以此時getInner就代表Inner了，所以可以直接使用！！而至於為何會有18,19行的關係是因為小弟這隻範例程式寫的不夠好，因為只要呼叫到outer();無論如何都會先執行一次啊，所以就會有那兩行結果。而最後，第22行是直接靠outer呼叫來執行Inner的結果，但這種作法其實會先執行一次outer本身後才跑Inner，所以第25行才會又出現一次。</p>

<br>


<p>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;其實回顧一下第6行的outerSpace，它是屬於外部function的變數，但是仍然可以被內部function使用，也因此延長它的存活時間，這算是種closure的基本例子。而這outerSpace對內部function來說我們可以稱作為閒置變數，你也可以覆寫它，然而因為JS的closure是綁住變數本身而非變數的值，所以一旦覆寫了話，當然也會連動影響到外部function的outerSpace，範例如下：</p>

<p> <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">function</span> <span class="nx">outer</span><span class="p">(){</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">outerSpace</span> <span class="o">=</span> <span class="s1">&#39;space godzilla&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">outerSpace</span> <span class="o">+</span> <span class="s1">&#39;is a super monster!&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">inner</span><span class="p">(){</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">innerSpace</span> <span class="o">=</span> <span class="s1">&#39;Just godzilla&#39;</span><span class="p">;</span>
</span><span class='line'>    <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">innerSpace</span> <span class="o">+</span> <span class="s1">&#39;is local monster and &#39;</span> <span class="o">+</span> <span class="nx">outerSpace</span> <span class="o">+</span> <span class="s1">&#39;is not!&#39;</span><span class="p">);</span>
</span><span class='line'>    <span class="nx">outerSpace</span> <span class="o">=</span> <span class="s1">&#39;space godzilla is changed from inner!&#39;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="nx">inner</span><span class="p">();</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">outerSpace</span><span class="p">);</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">inner</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">outer</span><span class="p">();</span>
</span><span class='line'><span class="c1">// 輸出</span>
</span><span class='line'><span class="c1">// space godzilla is a super monster!</span>
</span><span class='line'><span class="c1">// Just godzilla is local monster and space godzilla is not!</span>
</span><span class='line'><span class="c1">// space godzilla is changed from inner!</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure></p>

<br>


<p>在第7行的地方又覆寫了一次outSpace所以最後outer輸出的outerSpace也跟著被改變了！</p>

<br>


<h3>目前關於Function的部份就先寫到這，期待下篇應用再繼續努力，有問題或錯誤的話歡迎指正，感謝～！</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby Methods Map Reduce]]></title>
    <link href="http://noelsaga.herokuapp.com/blog/2014/08/22/ruby-methods-map-reduce/"/>
    <updated>2014-08-22T00:36:38+08:00</updated>
    <id>http://noelsaga.herokuapp.com/blog/2014/08/22/ruby-methods-map-reduce</id>
    <content type="html"><![CDATA[<br>


<h2>關於迭代（iterator）</h2>

<br>


<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;簡單的說，迭代就是重複某一過程，若以coding來，迭代器可以幫助我們走訪array或hash的每一個元素並執行某些要求或命令，而ruby則是善用迭代來讓我們更少地直接使用傳統的迴圈功能，以讓程式可以更精簡、直覺。而ruby內建的迭代函式真的很多，也非常的好用，常見的如select, find ,find_all, reject&hellip;等可以幫我們快速迭代array或是hash甚至物件內的元素，以快速達到某些目的，例如我們想找到陣列中的偶數:</p>

<!-- more -->


<h3>ruby內建迭代函式寫法</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="o">].</span><span class="n">find_all</span> <span class="k">do</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span>
</span><span class='line'>  <span class="n">n</span><span class="o">%</span><span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># 結果 [2,4,6,8]</span>
</span></code></pre></td></tr></table></div></figure>


<h3>傳統迴圈寫法:</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">array</span> <span class="o">=</span> <span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="o">]</span>
</span><span class='line'><span class="n">result</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'><span class="k">for</span> <span class="n">n</span> <span class="k">in</span> <span class="n">array</span>
</span><span class='line'>  <span class="n">result</span> <span class="o">&lt;&lt;</span> <span class="n">n</span> <span class="k">if</span> <span class="n">n</span><span class="o">%</span><span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1">#result: [2,4,6,8]</span>
</span><span class='line'><span class="n">result</span><span class="o">.</span><span class="n">clear</span> <span class="c1"># 洗白</span>
</span><span class='line'><span class="n">i</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="k">while</span><span class="p">(</span><span class="n">i</span><span class="o">&lt;</span><span class="n">array</span><span class="o">.</span><span class="n">length</span><span class="p">)</span>
</span><span class='line'>  <span class="n">result</span> <span class="o">&lt;&lt;</span> <span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="k">if</span> <span class="n">array</span><span class="o">[</span><span class="n">i</span><span class="o">]%</span><span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>  <span class="n">i</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># result: [2,4,6,8]</span>
</span></code></pre></td></tr></table></div></figure>


<br>


<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;寫慣c、java或php的人可能較熟習傳統迴圈寫法，雖然可以達成功能，但既然ruby已經幫我們都包成好用的迭代函式，那我們何不好好善用呢？！當然熟悉傳統迴圈的寫法也是可以讓我們理解迭代函式背後的原理，但在使用上建議各位多多利用這些函式吧，在ruby中，我們將會習慣使用迭代函式而非迴圈。</p>

<p>   常使用的迭代函式像有select, find, find_all, each, each_with_index, collect, reject, delete_if, grep, any?, all?, sort, sort_by, map, reduce等逐繁不及備載，而許多迭代函式的功用也非常相似，所以如何使用且看使用者習慣或喜好。</p>

<hr />

<h2>Map函式</h2>

<br>


<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;map函式與each最大的不同是他會回傳一個新的陣列，而陣列的結果則是根據我們在程式區塊(block)裡所定義的來對原陣列做修改，其實這用途非常常見，像是我們有16名學生的原始成績，想幫他們做開根號在除以10後得到的加權成績:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">scores</span> <span class="o">=</span> <span class="o">[</span><span class="mi">68</span><span class="p">,</span> <span class="mi">84</span><span class="p">,</span> <span class="mi">92</span><span class="p">,</span> <span class="mi">34</span><span class="p">,</span> <span class="mi">79</span><span class="p">,</span> <span class="mi">82</span><span class="p">,</span> <span class="mi">80</span><span class="p">,</span> <span class="mi">85</span><span class="p">,</span> <span class="mi">80</span><span class="p">,</span> <span class="mi">31</span><span class="p">,</span> <span class="mi">25</span><span class="p">,</span> <span class="mi">45</span><span class="p">,</span> <span class="mi">46</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">42</span><span class="p">,</span> <span class="mi">34</span><span class="o">]</span>
</span><span class='line'><span class="n">new_scores</span> <span class="o">=</span> <span class="n">scores</span><span class="o">.</span><span class="n">map</span> <span class="k">do</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span>
</span><span class='line'>  <span class="p">(</span><span class="no">Math</span><span class="o">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">)</span><span class="o">.</span><span class="n">round</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># scores: [68, 84, 92, 34, 79, 82, 80, 85, 80, 31, 25, 45, 46, 30, 42, 34]</span>
</span><span class='line'><span class="c1"># new_scores: [82.46, 91.65, 95.92, 58.31, 88.88, 90.55, 89.44, 92.2, 89.44, 55.68, 50.0, 67.08, 67.82, 54.77, 64.81, 58.31]</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">array</span> <span class="o">=</span> <span class="o">[[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="o">]</span><span class="p">,</span><span class="o">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="o">]</span><span class="p">,</span><span class="o">[</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="o">]</span><span class="p">,</span><span class="o">[</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="o">]]</span>
</span><span class='line'><span class="n">array</span><span class="o">.</span><span class="n">map</span> <span class="k">do</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span>
</span><span class='line'>  <span class="n">n</span><span class="o">.</span><span class="n">lasy</span> <span class="c1"># 只要最後一個元素</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># [2,4,6,8]</span>
</span><span class='line'>
</span><span class='line'><span class="n">t</span> <span class="o">=</span> <span class="no">Topic</span><span class="o">.</span><span class="n">scoped</span><span class="o">.</span><span class="n">map</span><span class="p">(</span><span class="o">&amp;</span><span class="ss">:name</span><span class="p">)</span>
</span><span class='line'><span class="n">t</span> <span class="o">=</span> <span class="no">Topic</span><span class="o">.</span><span class="n">scoped</span><span class="o">.</span><span class="n">pluck</span><span class="p">(</span><span class="ss">:name</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<br>


<p>所以，如果我們希望能回傳迭代後的結果則使用map</p>

<hr />

<h2>Reduce函式</h2>

<br>


<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;reduce是比較抽象一點的迭代函式，但功能非常強大，它幫助我們逐一迭代元素外，還會保有一個結果變數可跟隨著迭代過程一起存活並最終回傳這個結果，而最後一行的值則是會迭代到下次做計算的初始值，所以最後一行切記不要使用puts或會回傳nil的函式，不然會哭哭唷！</p>

<br>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="o">].</span><span class="n">reduce</span> <span class="k">do</span> <span class="o">|</span><span class="n">sum</span><span class="p">,</span><span class="n">value</span><span class="o">|</span>
</span><span class='line'>   <span class="n">sum</span> <span class="o">+=</span> <span class="n">value</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># 45</span>
</span></code></pre></td></tr></table></div></figure>


<br>


<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;其中在程式區塊內我們宣告的第一個變數sum即是那個所謂的結果變數，會一直跟隨迭代所存活並作為最後結果回傳，第二個變數value則是會跟隨陣列不斷迭代的個別值，然而我們也可以在一開始使用reduce時便賦予sum一個初始值；若我們沒有給初始值的話，sum則一開始會以陣列的第一個值，然後直接從第二的值開始做迭代。</p>

<br>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="o">].</span><span class="n">reduce</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">sum</span><span class="p">,</span><span class="n">value</span><span class="o">|</span>
</span><span class='line'>   <span class="n">sum</span> <span class="o">+=</span> <span class="n">value</span>
</span><span class='line'> <span class="k">end</span>
</span><span class='line'> <span class="c1"># 95</span>
</span></code></pre></td></tr></table></div></figure>


<br> 


<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;看到這邊可能會覺得很方便，但不以為然，若是不用reduce，我們過去的作法會是先在迭代範圍外先宣告一個變數，才能在範圍內使用此變數，而reduce則是把它包在一起使用。</p>

<br>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">sum</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="o">].</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">n</span><span class="o">|</span>
</span><span class='line'>  <span class="n">sum</span> <span class="o">+=</span> <span class="n">n</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="c1"># sum: 45</span>
</span><span class='line'>
</span><span class='line'><span class="c1">#也可以這樣使用</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="o">].</span><span class="n">reduce</span><span class="p">(</span><span class="ss">:+</span><span class="p">)</span>
</span><span class='line'><span class="c1"># 45</span>
</span><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="o">].</span><span class="n">reduce</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="ss">:+</span><span class="p">)</span>
</span><span class='line'><span class="c1"># 55</span>
</span></code></pre></td></tr></table></div></figure>


<h3>模仿select功能</h3>

<br>




<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="o">].</span><span class="n">reduce</span><span class="p">(</span><span class="o">[]</span><span class="p">)</span> <span class="k">do</span> <span class="o">|</span><span class="n">result</span><span class="p">,</span> <span class="n">value</span><span class="o">|</span>
</span><span class='line'>  <span class="n">result</span> <span class="o">&lt;&lt;</span> <span class="n">value</span> <span class="k">if</span> <span class="n">value</span><span class="o">%</span><span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span>
</span><span class='line'>  <span class="n">result</span>  <span class="c1"># 注意，這行如果不寫他會回傳nil，因為當1迭代進去時，不符合規則所以會回傳nil，這樣result下一次就會變成nil了而非[]</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<h3>模仿map功能</h3>

<br>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="o">].</span><span class="n">reduce</span><span class="p">()</span> <span class="k">do</span> <span class="o">|</span><span class="n">result</span><span class="p">,</span> <span class="n">value</span><span class="o">|</span>
</span><span class='line'>  <span class="n">result</span> <span class="o">&lt;&lt;</span> <span class="no">Math</span><span class="o">.</span><span class="n">sqrt</span><span class="p">(</span><span class="n">value</span><span class="p">)</span><span class="o">/</span><span class="mi">10</span>
</span><span class='line'>  <span class="n">result</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Javascript Object and Class]]></title>
    <link href="http://noelsaga.herokuapp.com/blog/2014/08/22/javascript-object-and-class/"/>
    <updated>2014-08-22T00:08:21+08:00</updated>
    <id>http://noelsaga.herokuapp.com/blog/2014/08/22/javascript-object-and-class</id>
    <content type="html"><![CDATA[<br>


<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;js也是個物件導向（object－oriented）的語言，但與我們傳統認知的C＋＋、Java的物件導向有所差異，但至少理念上還是一樣。物件會有所謂的成員也有人稱作屬性（property或attribute），指的是屬於該物件的某種數值或字串又或是其他的物件（ex: argument.length, event.data）。另外，物件也有方法（method，就是我們認知的function，ex: location.href(somefile.url) ），名稱上或許容易令人混淆，但大致來說一般的物件導向都是這麼稱呼與認知的。</p>

<!-- more -->


<br>


<h2>簡介</h2>

<br>


<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;js如我們所知是萬物皆物件的語言，但更進一步得講，其實<strong><em>並非所有萬物皆為物件</em></strong>，像是&#8221;foo&#8221;, 5, false等就不是物件，而是原始值，但我們依然可以對它們操作&#8221;foo&#8221;.length，難道它不是個物件嗎？其實這是js在我們使用原始值時會先幫我們把它進一步包裝成複合物件，等我們使用完後又會再釋放，當然我們在使用它的時候是感覺不到的，所以<strong><em>更正確的說法是，js裡所有的東西使用起來皆像物件！</em></strong></p>

<br>


<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;一般來說我們如果是 var myArray = []; 來宣告一個陣列物件，其實就隱含了我們做了var myArray = new Array();的用法而已，同理 var myObject = {} 也隱含了 var myObject = new Object()；而剛剛我們提到字串、數字、布林值不是物件而是原始值，但如果我們是用 var myString = new String(&ldquo;Godzilla&rdquo;)來產生字串的話，此時的myString就是物件了而非原始值了！！我們可以利用typeof 來判斷是否為物件，但function物件顯示的結果會是function而非object，但他依然是個物件唷！！如果想知道一物件是由誰所建構的則可以利用 constructor:</p>

<figure class='code'><figcaption><span>範例一 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">var</span> <span class="nx">myString</span> <span class="o">=</span> <span class="s1">&#39;godzilla&#39;</span>
</span><span class='line'><span class="k">typeof</span> <span class="nx">myString</span><span class="p">;</span> <span class="c1">// string</span>
</span><span class='line'><span class="nx">myString</span><span class="p">.</span><span class="nx">constructor</span><span class="p">;</span> <span class="c1">// String</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">myStringObject</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">String</span><span class="p">(</span><span class="s1">&#39;godzilla&#39;</span><span class="p">);</span>
</span><span class='line'><span class="k">typeof</span> <span class="nx">myStringObject</span><span class="p">;</span> <span class="c1">// object  此時是物件而非原始值</span>
</span><span class='line'><span class="nx">myStringObject</span><span class="p">.</span><span class="nx">constructor</span><span class="p">);</span> <span class="c1">// String</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">myArray</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span>
</span><span class='line'><span class="k">typeof</span> <span class="nx">myArray</span> <span class="c1">// object</span>
</span><span class='line'><span class="nx">myArray</span><span class="p">.</span><span class="nx">constructor</span> <span class="c1">// Array</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">myArrayObject</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Array</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">);</span>
</span><span class='line'><span class="k">typeof</span> <span class="nx">myArrayObject</span> <span class="c1">// object</span>
</span><span class='line'><span class="nx">myArrayObject</span><span class="p">.</span><span class="nx">constructor</span> <span class="c1">// Array</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">myFunction</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(){</span> <span class="nx">alert</span><span class="p">(</span><span class="s1">&#39;haha&#39;</span><span class="p">)</span> <span class="p">}</span>
</span><span class='line'><span class="nx">tpyeof</span> <span class="nx">myFunction</span> <span class="c1">// function 注意</span>
</span><span class='line'><span class="nx">myFunction</span><span class="p">.</span><span class="nx">constructor</span> <span class="c1">// Function</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">myFunctionObject</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Function</span><span class="p">(</span><span class="s1">&#39;name&#39;</span><span class="p">,</span><span class="s1">&#39;return name;&#39;</span><span class="p">);</span>
</span><span class='line'><span class="k">typeof</span> <span class="nx">myFunctionObject</span> <span class="c1">// function 注意</span>
</span><span class='line'><span class="nx">myFunction</span><span class="p">.</span><span class="nx">constructor</span>  <span class="c1">// Function</span>
</span></code></pre></td></tr></table></div></figure>


<p> 以上，大概是對js的物件基本介紹，這些有什麼用呢？其實個實際上並不能帶給你什麼酷炫的方式，但是對於觀念的釐清是很重要的！</p>

<hr />

<h2>自定類別</h2>

<br>


<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;js並無class，所以js的物件定義方使是靠關鍵字<code>function</code>來實現，跟我們一般直接定義一個function很類似：</p>

<figure class='code'><figcaption><span>範例二 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="kd">function</span> <span class="nx">godzilla</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span> <span class="c1">// godzilla只是個單純的function</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">mySon</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Son</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span> <span class="c1">// 利用function Son建立物件</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;I am &#39;</span> <span class="o">+</span> <span class="nx">mySon</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span>
</span><span class='line'><span class="nx">mySon</span><span class="p">.</span><span class="nx">changeName</span><span class="p">(</span><span class="s1">&#39;zilla&#39;</span><span class="p">);</span>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s1">&#39;Here comes my new name: &#39;</span> <span class="o">+</span> <span class="nx">mySon</span><span class="p">.</span><span class="nx">name</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c1">//利用function來制定我們想要的物件</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">Son</span><span class="p">(</span><span class="nx">name</span><span class="p">){</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="nx">name</span><span class="p">;</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">changeName</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">newName</span><span class="p">){</span>
</span><span class='line'>  <span class="k">this</span><span class="p">.</span><span class="nx">name</span> <span class="o">=</span> <span class="nx">newName</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">godzilla</span><span class="p">(</span><span class="s1">&#39;I am in a function rather than a object!&#39;</span><span class="p">,</span> <span class="s1">&#39;Noel&#39;</span><span class="p">);</span>
</span><span class='line'><span class="c1">//輸出</span>
</span><span class='line'><span class="c1">//I am in a function rather than a object! </span>
</span><span class='line'><span class="c1">//Noel</span>
</span><span class='line'><span class="c1">//zilla </span>
</span><span class='line'>  <span class="err">利用</span><span class="nb">Object</span><span class="err">建構函式來產生物件</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">eva</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Object</span><span class="p">();</span>
</span><span class='line'>  <span class="nx">eva</span><span class="p">.</span><span class="nx">pilot</span> <span class="o">=</span> <span class="s1">&#39;true four&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">eva</span><span class="p">.</span><span class="nx">color</span> <span class="o">=</span> <span class="s1">&#39;purple&#39;</span><span class="p">;</span>
</span><span class='line'>  <span class="nx">eva</span><span class="p">.</span><span class="nx">changePilot</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">person</span><span class="p">){</span>
</span><span class='line'>    <span class="k">this</span><span class="p">.</span><span class="nx">pilot</span> <span class="o">=</span> <span class="nx">person</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="nx">eva</span><span class="p">.</span><span class="nx">pilot</span> <span class="c1">// true four</span>
</span><span class='line'>  <span class="nx">eva</span><span class="p">.</span><span class="nx">color</span> <span class="c1">// purple</span>
</span><span class='line'>  <span class="nx">eva</span><span class="p">.</span><span class="nx">changePilot</span><span class="p">(</span><span class="s1">&#39;zero&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="nx">eva</span><span class="p">.</span><span class="nx">pilot</span> <span class="c1">// zero </span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RubyWay: Net::HTTP篇]]></title>
    <link href="http://noelsaga.herokuapp.com/blog/2014/08/21/ruby-net-http/"/>
    <updated>2014-08-21T23:53:47+08:00</updated>
    <id>http://noelsaga.herokuapp.com/blog/2014/08/21/ruby-net-http</id>
    <content type="html"><![CDATA[<h2>前言</h2>

<p>這算是比較抽象的一篇，目前我也不是很清楚他實際的作用與原理，但先記錄一下我所學到的部分與應用。</p>

<h2>get_response</h2>

<p> 有時候我們會需要在程式裡發出一個request，簡單的說就想像我們直接在瀏覽器裡輸入一串url，此時我們就可以利用Net::HTTP.get_response(<em>你要的uri</em>)，會回傳一個物件，而我們可以根據這個物件做我們想要的應用，看程式碼教學：</p>

<!-- more -->


<pre><code>require 'net/http'
#方法一
uri = URI.perse("example.com/bar/dosomething")  ＃先解析成uri物件比較方便
response = Net::HTTP.get_response(uri) # 回傳物件就是我們要的東西，我們可以利用他做很多事

#方法二
http = Net::HTTP.new(uri.host,uri.port)
response = http.request(Net::HTTP::Get.new(uri.request_uri))  #切記Get.new()的參數是request_uri不是uri

Net::HTTP.get_print(uri)   #印出response.body


response.code       # 回傳http狀態碼
response.body       # 回傳整個body內容，通常是編碼過不是人能看的東西
response.message    # 回傳HTTP狀態碼代表訊息 ex："Moved Permanently" 
response.uri        # 回傳呼叫它的uri物件

#uri物件也是個很方便的東西裡面常見的功能有

uri.request_uri     # 回傳你的request ex: /bar/dosomething
uri.host            # 回傳domain
uri.path            # 同request_uri
uri.scheme          # 回傳使用的傳輸協定
uri.query           # 回傳querysting
uri.port            # 回傳使用的port

#query_string處理
params = { :limit =&gt; 10, :page =&gt; 3 }
uri.query = URI.encode_www_form(params)
</code></pre>

<p>應用範例：預留一個版位顯示response.body的結果，利用Net::HTTP對某伺服器發送一個請求，並且把回傳的結果存入memcache以利用來顯示到預留的版位上。嗯嗯，聽起來有點像是ajax的概念，只是由伺服器端坐的而且他是同步的&hellip;</p>

<pre><code>response = Net::HTTP.get_response(URI.parse("http://foobar.header.com/api"))
if response.code.to_i == 200
  $memcached.set("header-html", response.body, 0)
end

某一處的VIEW顯現出來

&lt;%= raw $memcached.get("header-html").to_s.force_encode("utf8") %&gt;
</code></pre>

<hr />

<h2>post_form</h2>

<p>同理，有get方法就會有post方法，post方法一般用在傳送伺服器的的資料量大或是比較需要顧慮到安全時會用的！直接看教學範例：</p>

<pre><code>require "net/http"

uri = URI.parse("http://example.com/foo/search")

#方法一
response = Net::HTTP.post_form(uri, {"data" =&gt; "My data blah blah", "per_page" =&gt; "50"})

#方法二
http = Net::HTTP.new(uri.host, uri.port)
request = Net::HTTP::Post.new(uri.request_uri)
request.set_form_date({"data" =&gt; "My data blah blah", "per_page" =&gt; "50"})
response = http.request(request)
</code></pre>

<h2>REST methods</h2>

<p>有寫過rails的人相信都對RESTful不陌生，所以直接看範例吧！</p>

<pre><code>require "net/http"

uri = URI.parse("http://api.noelsaga.net/")

http = Net::HTTP.new(uri.host, uri.port) #

#Get : 通常是讀取單一筆資料如show
response = http.request(Net::HTTP::Get.new("/post/1"))

#Post: 通常是用來建立資料
request = (Net::HTTP::Post.new("/post/1"))
request.set_form_date({:tile =&gt; "Monday", :content =&gt; "I'm wanna go home..."})
response = http.request(request)

#Put : 通常是用來更新一筆資料
request = (Net::HTTP::Put.new("/post/1"))
request.set_form_date({:tile =&gt; "Tuesday"})
response = http.request(request)

#Delete: 嗯嗯，字面意思很清楚了
request = (Net::HTTP::Delete.new("/post/1"))
response = http.request(request)
</code></pre>

<h2>SSL/HTTPS request with PEM certificate</h2>

<p>如果是需要pem認證時，可以這麼做，此處直接使用Peter Cooper提供的範例</p>

<pre><code>require "net/https"
require "uri"

uri = URI.parse("https://secure.com/")
pem = File.read("/path/to/my.pem")
http = Net::HTTP.new(uri.host, uri.port)
http.use_ssl = true
http.cert = OpenSSL::X509::Certificate.new(pem)  # 根據pem檔案建立認證
http.key = OpenSSL::PKey::RSA.new(pem)            # 根據pem檔案建立認證
http.verify_mode = OpenSSL::SSL::VERIFY_PEER
request = Net::HTTP::Get.new(uri.request_uri)
</code></pre>

<h2>Post傳檔部分 （從缺中）</h2>

<p><a href="http://www.rubyinside.com/nethttp-cheat-sheet-2940.html">參考Peter Cooper文章</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Cookies練習，使用javascript]]></title>
    <link href="http://noelsaga.herokuapp.com/blog/2014/07/09/javascript-cookies/"/>
    <updated>2014-07-09T15:34:51+08:00</updated>
    <id>http://noelsaga.herokuapp.com/blog/2014/07/09/javascript-cookies</id>
    <content type="html"><![CDATA[<h2>目的：</h2>

<p>w3schools開宗明義的介紹，cookie是被發明來解決<strong><em>『如何讓伺服器記住使用者的資訊』</em></strong>。因為當伺服器端回傳了一個response給使用者端時，伺服器就會忘記一切關於使用者的資料，而cookie如何實作到這點呢？其實就只是把資料存在使用者端（瀏覽器），而一個cookie的大小最多為4KB，一個網站能夠存取20個cookie，而瀏覽器最多可記住300個cookie，內容是key=value的形式，其中value只能是字串，如果想存入array或hash得多花些技巧或是看看使用的開發框架有沒有幫忙處理這部份。</p>

<!-- more -->


<p>舉個最簡單跟<del>被用到爛</del>的例子，當</p>

<p>未完，待續&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First-article]]></title>
    <link href="http://noelsaga.herokuapp.com/blog/2014/07/03/first-article/"/>
    <updated>2014-07-03T12:36:53+08:00</updated>
    <id>http://noelsaga.herokuapp.com/blog/2014/07/03/first-article</id>
    <content type="html"><![CDATA[<h1>My First Article using Octopress</h1>

<hr />

<p><del><strong><em>星期四猴子去考試</em></strong></del></p>

<p>第一次使用octopress架blog並且搭配佈署到heroku，參考<a href="http://blog.eddie.com.tw/2011/10/11/how-to-install-octopress-on-heroku/">高見龍大大</a>的教學，其實架起來比想像的快很多，但是目前還是要習慣octopress的使用方式，跟搞熟heroku到底適不適合開分支合併回到master去，這樣版本控制才可以發揮他的作用阿，如果改錯了什麼，heroku起不來我辛苦寫的文章不就&hellip;！？</p>

<p>  接下來希望要來玩玩怎麼把theme改成我理想的樣子，雖然我css根本爛的可以，但是還是有東西可以給我練練了。還要試著把我本來在hackpad的文章一一搬過來，並且希望我可以持續乖乖的寫好blog&hellip;。嗯嗯，要做跟學習的事還是好多好多，但是過程是真的很有趣的，加油吧。</p>

<!-- more -->


<p>接下來下面讓我來試試markdown的特點吧。</p>

<h3><code>怡婷老師生日大快樂～！</code></h3>

<p><img src="../images/o0640064012326561387.jpg" alt="pic" /></p>

<p><img src="http://blenderartists.org/forum/attachment.php?attachmentid=212851&amp;stc=1&amp;d=1358710824g" alt="image" /></p>

<p><img class="right" src="http://noelsaga.herokuapp.com/images/o0640064012326561387.jpg" width="350" height="350" title="image" alt="images"></p>

<figure class='code'><figcaption><span>Time to be Awesome - awesome.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="nb">puts</span> <span class="s2">&quot;Awesome!&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<pre><code>puts "Hello World!"
echo "Hello World";
console.log("Hello World");
printf("Hello World");
cout&lt;&lt;"Hello World";
System.out.println("Hello World");
&lt;p&gt;Hello World&lt;/p&gt;          
</code></pre>

<ul>
<li>1</li>
<li>2</li>
<li>3</li>
<li>4</li>
<li>5</li>
</ul>


<figure class='code'><figcaption><span>當年第一次寫php，現在看不知道在寫啥鬼 start:5 </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'>  <span class="k">public</span> <span class="nv">$date</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">//public $startDay; </span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">__construct</span><span class="p">(){</span>
</span><span class='line'>      <span class="k">parent</span><span class="o">::</span><span class="na">__construct</span><span class="p">();</span>
</span><span class='line'>      <span class="nb">date_default_timezone_set</span><span class="p">(</span><span class="s1">&#39;Asia/Chongqing&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">date</span> <span class="o">=</span> <span class="nb">date</span><span class="p">(</span><span class="s1">&#39;Y-m-d&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">echo</span> <span class="s2">&quot;HAHA!!!&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="c1">//$this-&gt;startDay =</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="c1">//$dateOffset=0，0就是今天，1是明天，-1是昨天類推</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getDateOffSet</span><span class="p">(</span><span class="nv">$dateOffset</span> <span class="o">=</span> <span class="mi">0</span><span class="p">){</span>
</span><span class='line'>      <span class="nv">$endDate</span> <span class="o">=</span> <span class="nb">date</span><span class="p">(</span><span class="s1">&#39;Y-m-d&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="nv">$dateOffset</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">){</span>
</span><span class='line'>          <span class="nv">$nDay</span> <span class="o">=</span> <span class="nv">$dateOffset</span><span class="p">;</span>
</span><span class='line'>          <span class="nv">$unixDate</span> <span class="o">=</span> <span class="nb">strtotime</span><span class="p">(</span><span class="nv">$endDate</span><span class="p">);</span>
</span><span class='line'>          <span class="nv">$strStartDate</span> <span class="o">=</span> <span class="nv">$nDay</span><span class="o">.</span><span class="s1">&#39; days&#39;</span><span class="p">;</span>
</span><span class='line'>          <span class="nv">$endDate</span> <span class="o">=</span> <span class="nb">date</span><span class="p">(</span><span class="s1">&#39;Y-m-d&#39;</span><span class="p">,</span> <span class="nb">strtotime</span><span class="p">(</span><span class="nv">$strStartDate</span><span class="p">,</span> <span class="nv">$unixDate</span><span class="p">));</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$endDate</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="c1">//$startDate是從$endDate為起始點算的，一般來說必為負數，-5就是$endDate的5天前。參數$endDate格式為&#39;Y-m-d&#39;，目前必須先從getDateOffSet()取得</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getStartDate</span><span class="p">(</span><span class="nv">$startDate</span><span class="p">,</span> <span class="nv">$endDate</span><span class="p">){</span>
</span><span class='line'>      <span class="c1">//$endDate=$this-&gt;getDateOffSet($dateOffset);   </span>
</span><span class='line'>      <span class="nv">$unixDate</span> <span class="o">=</span> <span class="nb">strtotime</span><span class="p">(</span><span class="nv">$endDate</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$strStartDate</span> <span class="o">=</span> <span class="nv">$startDate</span><span class="o">.</span><span class="s1">&#39; days&#39;</span><span class="p">;</span>
</span><span class='line'>      <span class="nv">$startDate</span> <span class="o">=</span> <span class="nb">date</span><span class="p">(</span><span class="s1">&#39;Y-m-d&#39;</span><span class="p">,</span> <span class="nb">strtotime</span><span class="p">(</span><span class="nv">$strStartDate</span><span class="p">,</span> <span class="nv">$unixDate</span><span class="p">));</span>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$startDate</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="c1">//一次取得$endDate,$startDate，回傳的是一個陣列</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getStartToEndDates</span><span class="p">(</span><span class="nv">$startDate</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="nv">$dateOffset</span> <span class="o">=</span> <span class="mi">0</span><span class="p">){</span>
</span><span class='line'>      <span class="nv">$endDate</span> <span class="o">=</span> <span class="nb">date</span><span class="p">(</span><span class="s1">&#39;Y-m-d&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="nv">$dateOffset</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">){</span>
</span><span class='line'>          <span class="nv">$nDay</span> <span class="o">=</span> <span class="nv">$dateOffset</span><span class="p">;</span>
</span><span class='line'>          <span class="nv">$unixDate</span> <span class="o">=</span> <span class="nb">strtotime</span><span class="p">(</span><span class="nv">$endDate</span><span class="p">);</span>
</span><span class='line'>          <span class="nv">$strStartDate</span> <span class="o">=</span> <span class="nv">$nDay</span><span class="o">.</span><span class="s1">&#39; days&#39;</span><span class="p">;</span>
</span><span class='line'>          <span class="nv">$endDate</span> <span class="o">=</span> <span class="nb">date</span><span class="p">(</span><span class="s1">&#39;Y-m-d&#39;</span><span class="p">,</span> <span class="nb">strtotime</span><span class="p">(</span><span class="nv">$strStartDate</span><span class="p">,</span> <span class="nv">$unixDate</span><span class="p">));</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nv">$unixDate</span> <span class="o">=</span> <span class="nb">strtotime</span><span class="p">(</span><span class="nv">$endDate</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$strStartDate</span> <span class="o">=</span> <span class="nv">$startDate</span><span class="o">.</span><span class="s1">&#39; days&#39;</span><span class="p">;</span>
</span><span class='line'>      <span class="nv">$startDate</span> <span class="o">=</span> <span class="nb">date</span><span class="p">(</span><span class="s1">&#39;Y-m-d&#39;</span><span class="p">,</span> <span class="nb">strtotime</span><span class="p">(</span><span class="nv">$strStartDate</span><span class="p">,</span> <span class="nv">$unixDate</span><span class="p">));</span>
</span><span class='line'>      <span class="nv">$dates</span><span class="p">[</span><span class="s1">&#39;endDate&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$endDate</span><span class="p">;</span>
</span><span class='line'>      <span class="nv">$dates</span><span class="p">[</span><span class="s1">&#39;startDate&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$startDate</span><span class="p">;</span>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$dates</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>modeltest  (modeltest.php)</span> <a href='http://noelsaga.herokuapp.com/downloads/code/php/modeltest.php'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
<span class='line-number'>123</span>
<span class='line-number'>124</span>
<span class='line-number'>125</span>
<span class='line-number'>126</span>
<span class='line-number'>127</span>
<span class='line-number'>128</span>
<span class='line-number'>129</span>
<span class='line-number'>130</span>
<span class='line-number'>131</span>
<span class='line-number'>132</span>
<span class='line-number'>133</span>
<span class='line-number'>134</span>
<span class='line-number'>135</span>
<span class='line-number'>136</span>
<span class='line-number'>137</span>
<span class='line-number'>138</span>
<span class='line-number'>139</span>
<span class='line-number'>140</span>
<span class='line-number'>141</span>
<span class='line-number'>142</span>
<span class='line-number'>143</span>
<span class='line-number'>144</span>
<span class='line-number'>145</span>
<span class='line-number'>146</span>
<span class='line-number'>147</span>
<span class='line-number'>148</span>
<span class='line-number'>149</span>
<span class='line-number'>150</span>
<span class='line-number'>151</span>
<span class='line-number'>152</span>
<span class='line-number'>153</span>
<span class='line-number'>154</span>
<span class='line-number'>155</span>
<span class='line-number'>156</span>
<span class='line-number'>157</span>
<span class='line-number'>158</span>
<span class='line-number'>159</span>
<span class='line-number'>160</span>
<span class='line-number'>161</span>
<span class='line-number'>162</span>
<span class='line-number'>163</span>
<span class='line-number'>164</span>
<span class='line-number'>165</span>
<span class='line-number'>166</span>
<span class='line-number'>167</span>
<span class='line-number'>168</span>
<span class='line-number'>169</span>
<span class='line-number'>170</span>
<span class='line-number'>171</span>
<span class='line-number'>172</span>
<span class='line-number'>173</span>
<span class='line-number'>174</span>
<span class='line-number'>175</span>
<span class='line-number'>176</span>
<span class='line-number'>177</span>
<span class='line-number'>178</span>
<span class='line-number'>179</span>
<span class='line-number'>180</span>
<span class='line-number'>181</span>
<span class='line-number'>182</span>
<span class='line-number'>183</span>
<span class='line-number'>184</span>
<span class='line-number'>185</span>
<span class='line-number'>186</span>
<span class='line-number'>187</span>
<span class='line-number'>188</span>
<span class='line-number'>189</span>
<span class='line-number'>190</span>
<span class='line-number'>191</span>
<span class='line-number'>192</span>
<span class='line-number'>193</span>
<span class='line-number'>194</span>
<span class='line-number'>195</span>
<span class='line-number'>196</span>
<span class='line-number'>197</span>
<span class='line-number'>198</span>
<span class='line-number'>199</span>
<span class='line-number'>200</span>
<span class='line-number'>201</span>
<span class='line-number'>202</span>
<span class='line-number'>203</span>
<span class='line-number'>204</span>
<span class='line-number'>205</span>
<span class='line-number'>206</span>
<span class='line-number'>207</span>
<span class='line-number'>208</span>
<span class='line-number'>209</span>
<span class='line-number'>210</span>
<span class='line-number'>211</span>
<span class='line-number'>212</span>
<span class='line-number'>213</span>
<span class='line-number'>214</span>
<span class='line-number'>215</span>
<span class='line-number'>216</span>
<span class='line-number'>217</span>
<span class='line-number'>218</span>
<span class='line-number'>219</span>
<span class='line-number'>220</span>
<span class='line-number'>221</span>
<span class='line-number'>222</span>
<span class='line-number'>223</span>
<span class='line-number'>224</span>
<span class='line-number'>225</span>
<span class='line-number'>226</span>
<span class='line-number'>227</span>
<span class='line-number'>228</span>
<span class='line-number'>229</span>
<span class='line-number'>230</span>
<span class='line-number'>231</span>
<span class='line-number'>232</span>
<span class='line-number'>233</span>
<span class='line-number'>234</span>
<span class='line-number'>235</span>
<span class='line-number'>236</span>
<span class='line-number'>237</span>
<span class='line-number'>238</span>
<span class='line-number'>239</span>
<span class='line-number'>240</span>
<span class='line-number'>241</span>
<span class='line-number'>242</span>
<span class='line-number'>243</span>
<span class='line-number'>244</span>
<span class='line-number'>245</span>
<span class='line-number'>246</span>
<span class='line-number'>247</span>
<span class='line-number'>248</span>
<span class='line-number'>249</span>
<span class='line-number'>250</span>
<span class='line-number'>251</span>
<span class='line-number'>252</span>
<span class='line-number'>253</span>
<span class='line-number'>254</span>
<span class='line-number'>255</span>
<span class='line-number'>256</span>
<span class='line-number'>257</span>
<span class='line-number'>258</span>
<span class='line-number'>259</span>
<span class='line-number'>260</span>
<span class='line-number'>261</span>
<span class='line-number'>262</span>
<span class='line-number'>263</span>
<span class='line-number'>264</span>
<span class='line-number'>265</span>
<span class='line-number'>266</span>
<span class='line-number'>267</span>
<span class='line-number'>268</span>
<span class='line-number'>269</span>
<span class='line-number'>270</span>
<span class='line-number'>271</span>
<span class='line-number'>272</span>
<span class='line-number'>273</span>
<span class='line-number'>274</span>
<span class='line-number'>275</span>
<span class='line-number'>276</span>
<span class='line-number'>277</span>
<span class='line-number'>278</span>
<span class='line-number'>279</span>
<span class='line-number'>280</span>
<span class='line-number'>281</span>
<span class='line-number'>282</span>
<span class='line-number'>283</span>
<span class='line-number'>284</span>
<span class='line-number'>285</span>
<span class='line-number'>286</span>
<span class='line-number'>287</span>
<span class='line-number'>288</span>
<span class='line-number'>289</span>
<span class='line-number'>290</span>
<span class='line-number'>291</span>
<span class='line-number'>292</span>
<span class='line-number'>293</span>
<span class='line-number'>294</span>
<span class='line-number'>295</span>
<span class='line-number'>296</span>
<span class='line-number'>297</span>
<span class='line-number'>298</span>
<span class='line-number'>299</span>
<span class='line-number'>300</span>
<span class='line-number'>301</span>
<span class='line-number'>302</span>
</pre></td><td class='code'><pre><code class='php'><span class='line'><span class="o">&lt;?</span><span class="nx">php</span>
</span><span class='line'><span class="k">class</span> <span class="nc">Modeltest</span> <span class="k">extends</span> <span class="nx">CI_Model</span><span class="p">{</span>
</span><span class='line'>  
</span><span class='line'>  <span class="k">public</span> <span class="nv">$date</span><span class="p">;</span>
</span><span class='line'>  <span class="c1">//public $startDay;</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">__construct</span><span class="p">(){</span>
</span><span class='line'>      <span class="k">parent</span><span class="o">::</span><span class="na">__construct</span><span class="p">();</span>
</span><span class='line'>      <span class="nb">date_default_timezone_set</span><span class="p">(</span><span class="s1">&#39;Asia/Chongqing&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">date</span> <span class="o">=</span> <span class="nb">date</span><span class="p">(</span><span class="s1">&#39;Y-m-d&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">echo</span> <span class="s2">&quot;HAHA!!!&quot;</span><span class="p">;</span>
</span><span class='line'>      <span class="c1">//$this-&gt;startDay =</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="c1">//$dateOffset=0，0就是今天，1是明天，-1是昨天類推</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getDateOffSet</span><span class="p">(</span><span class="nv">$dateOffset</span> <span class="o">=</span> <span class="mi">0</span><span class="p">){</span>
</span><span class='line'>      <span class="nv">$endDate</span> <span class="o">=</span> <span class="nb">date</span><span class="p">(</span><span class="s1">&#39;Y-m-d&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="nv">$dateOffset</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">){</span>
</span><span class='line'>          <span class="nv">$nDay</span> <span class="o">=</span> <span class="nv">$dateOffset</span><span class="p">;</span>
</span><span class='line'>          <span class="nv">$unixDate</span> <span class="o">=</span> <span class="nb">strtotime</span><span class="p">(</span><span class="nv">$endDate</span><span class="p">);</span>
</span><span class='line'>          <span class="nv">$strStartDate</span> <span class="o">=</span> <span class="nv">$nDay</span><span class="o">.</span><span class="s1">&#39; days&#39;</span><span class="p">;</span>
</span><span class='line'>          <span class="nv">$endDate</span> <span class="o">=</span> <span class="nb">date</span><span class="p">(</span><span class="s1">&#39;Y-m-d&#39;</span><span class="p">,</span> <span class="nb">strtotime</span><span class="p">(</span><span class="nv">$strStartDate</span><span class="p">,</span> <span class="nv">$unixDate</span><span class="p">));</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$endDate</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="c1">//$startDate是從$endDate為起始點算的，一般來說必為負數，-5就是$endDate的5天前。參數$endDate格式為&#39;Y-m-d&#39;，目前必須先從getDateOffSet()取得</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getStartDate</span><span class="p">(</span><span class="nv">$startDate</span><span class="p">,</span> <span class="nv">$endDate</span><span class="p">){</span>
</span><span class='line'>      <span class="c1">//$endDate=$this-&gt;getDateOffSet($dateOffset);   </span>
</span><span class='line'>      <span class="nv">$unixDate</span> <span class="o">=</span> <span class="nb">strtotime</span><span class="p">(</span><span class="nv">$endDate</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$strStartDate</span> <span class="o">=</span> <span class="nv">$startDate</span><span class="o">.</span><span class="s1">&#39; days&#39;</span><span class="p">;</span>
</span><span class='line'>      <span class="nv">$startDate</span> <span class="o">=</span> <span class="nb">date</span><span class="p">(</span><span class="s1">&#39;Y-m-d&#39;</span><span class="p">,</span> <span class="nb">strtotime</span><span class="p">(</span><span class="nv">$strStartDate</span><span class="p">,</span> <span class="nv">$unixDate</span><span class="p">));</span>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$startDate</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="c1">//一次取得$endDate,$startDate，回傳的是一個陣列</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getStartToEndDates</span><span class="p">(</span><span class="nv">$startDate</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="nv">$dateOffset</span> <span class="o">=</span> <span class="mi">0</span><span class="p">){</span>
</span><span class='line'>      <span class="nv">$endDate</span> <span class="o">=</span> <span class="nb">date</span><span class="p">(</span><span class="s1">&#39;Y-m-d&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="nv">$dateOffset</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">){</span>
</span><span class='line'>          <span class="nv">$nDay</span> <span class="o">=</span> <span class="nv">$dateOffset</span><span class="p">;</span>
</span><span class='line'>          <span class="nv">$unixDate</span> <span class="o">=</span> <span class="nb">strtotime</span><span class="p">(</span><span class="nv">$endDate</span><span class="p">);</span>
</span><span class='line'>          <span class="nv">$strStartDate</span> <span class="o">=</span> <span class="nv">$nDay</span><span class="o">.</span><span class="s1">&#39; days&#39;</span><span class="p">;</span>
</span><span class='line'>          <span class="nv">$endDate</span> <span class="o">=</span> <span class="nb">date</span><span class="p">(</span><span class="s1">&#39;Y-m-d&#39;</span><span class="p">,</span> <span class="nb">strtotime</span><span class="p">(</span><span class="nv">$strStartDate</span><span class="p">,</span> <span class="nv">$unixDate</span><span class="p">));</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nv">$unixDate</span> <span class="o">=</span> <span class="nb">strtotime</span><span class="p">(</span><span class="nv">$endDate</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$strStartDate</span> <span class="o">=</span> <span class="nv">$startDate</span><span class="o">.</span><span class="s1">&#39; days&#39;</span><span class="p">;</span>
</span><span class='line'>      <span class="nv">$startDate</span> <span class="o">=</span> <span class="nb">date</span><span class="p">(</span><span class="s1">&#39;Y-m-d&#39;</span><span class="p">,</span> <span class="nb">strtotime</span><span class="p">(</span><span class="nv">$strStartDate</span><span class="p">,</span> <span class="nv">$unixDate</span><span class="p">));</span>
</span><span class='line'>      <span class="nv">$dates</span><span class="p">[</span><span class="s1">&#39;endDate&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$endDate</span><span class="p">;</span>
</span><span class='line'>      <span class="nv">$dates</span><span class="p">[</span><span class="s1">&#39;startDate&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$startDate</span><span class="p">;</span>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$dates</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getFeaturedNewsArticles</span><span class="p">(</span><span class="nv">$list_num</span><span class="p">,</span> <span class="nv">$startDate</span> <span class="o">=</span> <span class="o">-</span><span class="mi">7</span><span class="p">,</span> <span class="nv">$dateOffset</span><span class="o">=</span><span class="mi">0</span><span class="p">){</span><span class="c1">//撈一週精選美妝新聞</span>
</span><span class='line'>      <span class="nv">$endDate</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getDateOffSet</span><span class="p">(</span><span class="nv">$dateOffset</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$startDate</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getStartDate</span><span class="p">(</span><span class="nv">$startDate</span><span class="p">,</span> <span class="nv">$endDate</span><span class="p">);</span>
</span><span class='line'>      <span class="c1">//test area start  想拔掉測試hide起來就好 下面參數也就不用改了</span>
</span><span class='line'>      <span class="nv">$endDate</span><span class="o">=</span><span class="s1">&#39;2012-05-06&#39;</span><span class="p">;</span>
</span><span class='line'>      <span class="nv">$startDate</span><span class="o">=</span><span class="s1">&#39;2012-04-06&#39;</span><span class="p">;</span>
</span><span class='line'>      <span class="c1">//test area stop</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">from</span><span class="p">(</span><span class="s1">&#39;cosme_beautynews&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">join</span><span class="p">(</span><span class="s1">&#39;cosme_beautynews_paragraphs&#39;</span><span class="p">,</span> <span class="s1">&#39;cosme_beautynews.news_id=cosme_beautynews_paragraphs.news_id&#39;</span><span class="p">,</span> <span class="s1">&#39;left&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;news_publishdate &gt;&#39;</span><span class="p">,</span> <span class="nv">$startDate</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;news_publishdate &lt;&#39;</span><span class="p">,</span> <span class="nv">$endDate</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">limit</span><span class="p">(</span><span class="nv">$list_num</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">order_by</span><span class="p">(</span><span class="s2">&quot;news_pageview&quot;</span><span class="p">,</span> <span class="s2">&quot;desc&quot;</span><span class="p">);</span> <span class="c1">//照新聞人氣排名</span>
</span><span class='line'>      <span class="nv">$query</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$data</span> <span class="o">=</span> <span class="nv">$query</span><span class="o">-&gt;</span><span class="na">result_array</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$return_data</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$return_data</span><span class="p">[</span><span class="s1">&#39;news_data&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$data</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$return_data</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getRecommendReviews</span><span class="p">(</span><span class="nv">$list_Num</span><span class="p">,</span> <span class="nv">$nday</span><span class="p">){</span><span class="c1">//撈每日最新推薦資料，合併cosme_product</span>
</span><span class='line'>      <span class="nv">$crv_seq</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getRandomReviewsData</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$strDay</span> <span class="o">=</span> <span class="nv">$nday</span><span class="o">.</span><span class="s1">&#39; day&#39;</span><span class="p">;</span>        
</span><span class='line'>      <span class="nv">$startDate</span> <span class="o">=</span> <span class="nb">date</span><span class="p">(</span><span class="s2">&quot;Y-m-d&quot;</span><span class="p">,</span> <span class="nb">strtotime</span><span class="p">(</span><span class="nv">$strDay</span><span class="p">));</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">from</span><span class="p">(</span><span class="s1">&#39;cosme_review&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">join</span><span class="p">(</span><span class="s1">&#39;cosme_product&#39;</span><span class="p">,</span> <span class="s1">&#39;cosme_review.crv_pseq=cosme_product.product_id&#39;</span><span class="p">,</span> <span class="s1">&#39;left&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">foreach</span> <span class="p">(</span><span class="nv">$crv_seq</span> <span class="k">as</span> <span class="nv">$value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">or_where</span><span class="p">(</span><span class="s1">&#39;crv_seq&#39;</span><span class="p">,</span> <span class="nv">$value</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">limit</span><span class="p">(</span><span class="nv">$list_Num</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$query</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$data</span> <span class="o">=</span> <span class="nv">$query</span><span class="o">-&gt;</span><span class="na">result_array</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$return_data</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$return_data</span><span class="p">[</span><span class="s1">&#39;reviewData&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$data</span><span class="p">;</span>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$return_data</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getPollTop</span><span class="p">(</span><span class="nv">$topNumber</span><span class="p">,</span> <span class="nv">$startDate</span><span class="p">,</span> <span class="nv">$dateOffset</span><span class="p">){</span> <span class="c1">//抓人氣最高的產品心得,時間參數部份已補上，參數部份統一用DAYS去算</span>
</span><span class='line'>      <span class="nv">$endDate</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getDateOffSet</span><span class="p">(</span><span class="nv">$dateOffset</span><span class="p">);</span>
</span><span class='line'>      <span class="c1">//test area start</span>
</span><span class='line'>      <span class="nv">$endDate</span> <span class="o">=</span> <span class="s1">&#39;2012-05-06&#39;</span><span class="p">;</span>
</span><span class='line'>      <span class="c1">//test area end</span>
</span><span class='line'>      <span class="nv">$unixDate</span> <span class="o">=</span> <span class="nb">strtotime</span><span class="p">(</span><span class="nv">$endDate</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$startDate</span> <span class="o">=</span> <span class="nb">date</span><span class="p">(</span><span class="s1">&#39;Y-m-d&#39;</span><span class="p">,</span> <span class="nb">strtotime</span><span class="p">(</span><span class="s2">&quot;- 2 months&quot;</span><span class="p">,</span> <span class="nv">$unixDate</span><span class="p">));</span>
</span><span class='line'>      <span class="nv">$dates</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getStartToEndDates</span><span class="p">(</span><span class="nv">$startDate</span><span class="p">,</span> <span class="nv">$dateOffset</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$endDate</span> <span class="o">=</span> <span class="nv">$dates</span><span class="p">[</span><span class="s1">&#39;endDate&#39;</span><span class="p">];</span>
</span><span class='line'>      <span class="nv">$startDate</span> <span class="o">=</span> <span class="nv">$dates</span><span class="p">[</span><span class="s1">&#39;startDate&#39;</span><span class="p">];</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">from</span><span class="p">(</span><span class="s1">&#39;cosme_review_poll&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">select</span><span class="p">(</span><span class="s1">&#39;crv_seq,count(*)&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">group_by</span><span class="p">(</span><span class="s1">&#39;crv_seq&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;createtime &gt;&#39;</span><span class="p">,</span> <span class="nv">$startDate</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;createtime &lt;&#39;</span><span class="p">,</span> <span class="nv">$endDate</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">limit</span><span class="p">(</span><span class="nv">$topNumber</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">order_by</span><span class="p">(</span><span class="s1">&#39;count(*)&#39;</span><span class="p">,</span> <span class="s1">&#39;desc&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$query</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$data</span> <span class="o">=</span> <span class="nv">$query</span><span class="o">-&gt;</span><span class="na">result_array</span><span class="p">();</span>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$data</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getRandomReviewsData</span><span class="p">(</span><span class="nv">$poll_Num</span><span class="o">=</span><span class="mi">20</span><span class="p">,</span> <span class="nv">$rand_Num</span><span class="o">=</span><span class="mi">4</span><span class="p">,</span> <span class="nv">$startDate</span><span class="o">=-</span><span class="mi">30</span><span class="p">,</span> <span class="nv">$dateOffset</span><span class="o">=</span><span class="mi">0</span><span class="p">){</span><span class="c1">//從人氣最高的心得做20取4併只回傳crv_id</span>
</span><span class='line'>      <span class="nv">$finalData</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$crv_seq</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$firstdata</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getPollTop</span><span class="p">(</span><span class="nv">$poll_Num</span><span class="p">,</span> <span class="nv">$startDate</span><span class="p">,</span> <span class="nv">$dateOffset</span><span class="p">);</span><span class="c1">//隨機取20筆人氣指數最高的資料</span>
</span><span class='line'>      <span class="nv">$seconddata</span> <span class="o">=</span> <span class="nb">array_rand</span><span class="p">(</span><span class="nv">$firstdata</span><span class="p">,</span> <span class="nv">$rand_Num</span><span class="p">);</span><span class="c1">//20筆中再取4,但是好像無法只取一個值了，因為第二個參數被設定好，似乎是強迫要大於1</span>
</span><span class='line'>      <span class="k">foreach</span> <span class="p">(</span><span class="nv">$seconddata</span> <span class="k">as</span> <span class="nv">$keyValue</span><span class="p">)</span> <span class="p">{</span>              <span class="c1">//4筆資料的陣列</span>
</span><span class='line'>          <span class="nv">$finalData</span><span class="p">[]</span> <span class="o">=</span> <span class="nv">$firstdata</span><span class="p">[</span><span class="nv">$keyValue</span><span class="p">];</span>   
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">foreach</span> <span class="p">(</span><span class="nv">$finalData</span> <span class="k">as</span> <span class="nv">$value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nv">$crv_seq</span><span class="p">[]</span> <span class="o">=</span> <span class="nv">$value</span><span class="p">[</span><span class="s1">&#39;crv_seq&#39;</span><span class="p">];</span>  <span class="c1">//再把陣列中的心得編號取出</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$crv_seq</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getProductsIdByReviewsId</span><span class="p">(){</span>
</span><span class='line'>      <span class="nv">$crv_seq</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getRandomReviewsData</span><span class="p">();</span>   
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">from</span><span class="p">(</span><span class="s1">&#39;cosme_review&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">select</span><span class="p">(</span><span class="s1">&#39;crv_seq, crv_pseq&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">foreach</span> <span class="p">(</span><span class="nv">$crv_seq</span> <span class="k">as</span> <span class="nv">$value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">or_where</span><span class="p">(</span><span class="s1">&#39;crv_seq&#39;</span><span class="p">,</span> <span class="nv">$value</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>    
</span><span class='line'>      <span class="nv">$query</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$data</span> <span class="o">=</span> <span class="nv">$query</span><span class="o">-&gt;</span><span class="na">result_array</span><span class="p">();</span>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$data</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getProductsSpecial</span><span class="p">(</span><span class="nv">$year</span><span class="p">,</span> <span class="nv">$month</span><span class="p">,</span> <span class="nv">$isOdd</span><span class="o">=</span><span class="k">true</span><span class="p">){</span><span class="c1">//撈新品搶先王所需資料，合併資料表cosme_review,cosme_product</span>
</span><span class='line'>      <span class="nv">$product_id</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getProductsTopId</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="nv">$year</span><span class="p">,</span> <span class="nv">$month</span><span class="p">,</span> <span class="nv">$isOdd</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">from</span><span class="p">(</span><span class="s1">&#39;cosme_product&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">join</span><span class="p">(</span><span class="s1">&#39;cosme_review&#39;</span><span class="p">,</span> <span class="s1">&#39;cosme_product.first_review_id = cosme_review.crv_seq&#39;</span><span class="p">,</span> <span class="s1">&#39;left&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="k">foreach</span> <span class="p">(</span><span class="nv">$product_id</span> <span class="k">as</span> <span class="nv">$value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">or_where</span><span class="p">(</span><span class="s1">&#39;cosme_product.product_id&#39;</span><span class="p">,</span> <span class="nv">$value</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nv">$query</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$data</span> <span class="o">=</span> <span class="nv">$query</span><span class="o">-&gt;</span><span class="na">result_array</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$returnData</span><span class="p">[</span><span class="s1">&#39;reviewData&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$data</span><span class="p">;</span>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$returnData</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getProductsTop</span><span class="p">(</span><span class="nv">$year</span><span class="p">,</span> <span class="nv">$month</span><span class="p">,</span> <span class="nv">$isOdd</span> <span class="o">=</span> <span class="k">true</span><span class="p">){</span><span class="c1">//按照邏輯撈當月份新產品60筆，邏輯在這資料表已經先處理過了，$isOdd是判斷奇數，是的話回傳當月首日</span>
</span><span class='line'>      <span class="c1">// $date=date(&#39;Y-m-d&#39;);</span>
</span><span class='line'>      <span class="c1">// $dateq=strtotime($date);</span>
</span><span class='line'>      <span class="c1">// $startDate=date(&#39;Y-m-d&#39;,strtotime(&quot;- 3 months&quot;,$dateq));</span>
</span><span class='line'>      <span class="nv">$date</span> <span class="o">=</span> <span class="p">(</span><span class="nv">$isOdd</span> <span class="o">==</span> <span class="k">true</span><span class="p">)</span> <span class="o">?</span> <span class="s1">&#39;01&#39;</span> <span class="o">:</span> <span class="s1">&#39;16&#39;</span><span class="p">;</span>
</span><span class='line'>      <span class="nv">$pickup_yearmonth</span> <span class="o">=</span> <span class="nv">$year</span><span class="o">.</span><span class="nv">$month</span><span class="o">.</span><span class="nv">$date</span><span class="p">;</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">from</span><span class="p">(</span><span class="s1">&#39;cosme_newproduct_userank_product_pickup&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;pickup_yearmonth&#39;</span><span class="p">,</span> <span class="nv">$pickup_yearmonth</span><span class="p">);</span>   
</span><span class='line'>      <span class="nv">$query</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$return_data</span> <span class="o">=</span> <span class="nv">$query</span><span class="o">-&gt;</span><span class="na">result_array</span><span class="p">();</span>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$return_data</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getProductsTopId</span><span class="p">(</span><span class="nv">$rand_num</span> <span class="o">=</span> <span class="mi">5</span><span class="p">,</span> <span class="nv">$year</span><span class="p">,</span> <span class="nv">$month</span><span class="p">,</span> <span class="nv">$isOdd</span><span class="p">){</span><span class="c1">//隨機取出5筆，然後只回傳product_id</span>
</span><span class='line'>      <span class="nv">$thirdData</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$findalData</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$firstData</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getProductsTop</span><span class="p">(</span><span class="nv">$year</span><span class="p">,</span> <span class="nv">$month</span><span class="p">,</span> <span class="nv">$isOdd</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$secondData</span> <span class="o">=</span> <span class="nb">array_rand</span><span class="p">(</span><span class="nv">$firstData</span><span class="p">,</span> <span class="nv">$rand_num</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">//TODO check foreach data</span>
</span><span class='line'>      <span class="k">foreach</span> <span class="p">(</span><span class="nv">$secondData</span> <span class="k">as</span> <span class="nv">$keyValue</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nv">$thirdData</span><span class="p">[]</span> <span class="o">=</span> <span class="nv">$firstData</span><span class="p">[</span><span class="nv">$keyValue</span><span class="p">];</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">foreach</span> <span class="p">(</span><span class="nv">$thirdData</span> <span class="k">as</span> <span class="nv">$value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nv">$findalData</span><span class="p">[]</span> <span class="o">=</span> <span class="nv">$value</span><span class="p">[</span><span class="s1">&#39;product_id&#39;</span><span class="p">];</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$findalData</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="c1">//熱門注目使用心得</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getHotReview</span><span class="p">(){</span>
</span><span class='line'>      <span class="nv">$hotReviewId</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getHotReviewId</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">from</span><span class="p">(</span><span class="s1">&#39;cosme_review&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">join</span><span class="p">(</span><span class="s1">&#39;cosme_members&#39;</span><span class="p">,</span> <span class="s1">&#39;cosme_review.crv_memid=cosme_members.cmem_seq&#39;</span><span class="p">,</span> <span class="s1">&#39;left&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;crv_seq&#39;</span><span class="p">,</span> <span class="nv">$hotReviewId</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$query</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$Data</span> <span class="o">=</span> <span class="nv">$query</span><span class="o">-&gt;</span><span class="na">row_array</span><span class="p">();</span><span class="c1">//單筆資料用的陣列</span>
</span><span class='line'>      <span class="nv">$returnData</span><span class="p">[</span><span class="s1">&#39;hotReviewData&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$Data</span><span class="p">;</span>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$returnData</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="c1">//TODO check this logic</span>
</span><span class='line'>  <span class="c1">//排序得地方好像是錯的，要的是一段時間內的PV而非最終的</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getTopReview</span><span class="p">(</span><span class="nv">$startDate</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="nv">$dateOffset</span> <span class="o">=</span> <span class="mi">0</span><span class="p">){</span>
</span><span class='line'>      <span class="nv">$endDate</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getDateOffSet</span><span class="p">(</span><span class="nv">$dateOffset</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$startDate</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getStartDate</span><span class="p">(</span><span class="nv">$startDate</span><span class="p">,</span> <span class="nv">$endDate</span><span class="p">);</span>
</span><span class='line'>      <span class="c1">//test area start</span>
</span><span class='line'>      <span class="nv">$startDate</span> <span class="o">=</span> <span class="s1">&#39;2012-05-01&#39;</span><span class="p">;</span>
</span><span class='line'>      <span class="nv">$endDate</span> <span class="o">=</span> <span class="s1">&#39;2012-05-02&#39;</span><span class="p">;</span>
</span><span class='line'>      <span class="c1">//test area end</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">from</span><span class="p">(</span><span class="s1">&#39;cosme_review&#39;</span><span class="p">);</span>          
</span><span class='line'>        <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;crv_date &gt;&#39;</span><span class="p">,</span> <span class="nv">$startDate</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;crv_date &lt;&#39;</span><span class="p">,</span> <span class="nv">$endDate</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">order_by</span><span class="p">(</span><span class="s1">&#39;review_pageview_final&#39;</span><span class="p">,</span> <span class="s1">&#39;desc&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">limit</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$query</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$returnData</span> <span class="o">=</span> <span class="nv">$query</span><span class="o">-&gt;</span><span class="na">result_array</span><span class="p">();</span>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$returnData</span><span class="p">;</span>   
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getHotReviewId</span><span class="p">(){</span>
</span><span class='line'>      <span class="nv">$hotReviewData</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getTopReview</span><span class="p">();</span>
</span><span class='line'>      <span class="k">foreach</span> <span class="p">(</span><span class="nv">$hotReviewData</span> <span class="k">as</span> <span class="nv">$value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nv">$hotReviewId</span> <span class="o">=</span> <span class="nv">$value</span><span class="p">[</span><span class="s1">&#39;crv_seq&#39;</span><span class="p">];</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$hotReviewId</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getReviewByPhotos</span><span class="p">(){</span>
</span><span class='line'>      <span class="nv">$reviewId</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getTopReviewsIdByPhotos</span><span class="p">();</span>   
</span><span class='line'>      <span class="nv">$picUrls</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getPhotosUrl</span><span class="p">(</span><span class="nv">$reviewId</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">from</span><span class="p">(</span><span class="s1">&#39;cosme_review&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">join</span><span class="p">(</span><span class="s1">&#39;cosme_members&#39;</span><span class="p">,</span><span class="s1">&#39;cosme_review.crv_memid=cosme_members.cmem_seq&#39;</span><span class="p">,</span><span class="s1">&#39;left&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;crv_seq&#39;</span><span class="p">,</span><span class="nv">$reviewId</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$query</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$data</span> <span class="o">=</span> <span class="nv">$query</span><span class="o">-&gt;</span><span class="na">result_array</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$returnData</span><span class="p">[</span><span class="s1">&#39;reviewData&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$data</span><span class="p">;</span>
</span><span class='line'>      <span class="nv">$returnData</span><span class="p">[</span><span class="s1">&#39;picUrlData&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$picUrls</span><span class="p">;</span>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$returnData</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  
</span><span class='line'>  <span class="c1">//撈出商品圖片前五多的心得</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getTopReviewsByPhotos</span><span class="p">(</span><span class="nv">$topNum</span> <span class="o">=</span> <span class="mi">5</span><span class="p">,</span> <span class="nv">$startDate</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="nv">$dateOffset</span> <span class="o">=</span> <span class="mi">0</span><span class="p">){</span>
</span><span class='line'>      <span class="nv">$endDate</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getDateOffSet</span><span class="p">(</span><span class="nv">$dateOffset</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$startDate</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getStartDate</span><span class="p">(</span><span class="nv">$startDate</span><span class="p">,</span><span class="nv">$endDate</span><span class="p">);</span>    
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">from</span><span class="p">(</span><span class="s1">&#39;cosme_review_pic&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">join</span><span class="p">(</span><span class="s1">&#39;cosme_review&#39;</span><span class="p">,</span> <span class="s1">&#39;cosme_review_pic.review_id=cosme_review.crv_seq&#39;</span><span class="p">,</span> <span class="s1">&#39;left&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">select</span><span class="p">(</span><span class="s1">&#39;review_id, crv_date, count(pic_id)&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;review_id &gt;&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span><span class="c1">//防範把REVIEW—ID為NULL的也算近來</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;crv_date &gt;&#39;</span><span class="p">,</span> <span class="s1">&#39;2012-05-02&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;crv_date &lt;&#39;</span><span class="p">,</span> <span class="s1">&#39;2012-05-03&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">group_by</span><span class="p">(</span><span class="s1">&#39;review_id&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">order_by</span><span class="p">(</span><span class="s1">&#39;count(pic_id)&#39;</span><span class="p">,</span> <span class="s1">&#39;desc&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">limit</span><span class="p">(</span><span class="nv">$topNum</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$query</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$data</span> <span class="o">=</span> <span class="nv">$query</span><span class="o">-&gt;</span><span class="na">result_array</span><span class="p">();</span>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$data</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="c1">//取回最多商品圖片的心得的單個ID</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getTopReviewsIdByPhotos</span><span class="p">(){</span>
</span><span class='line'>      <span class="nv">$firstData</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getTopReviewsByPhotos</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$secondData</span> <span class="o">=</span> <span class="nb">array_rand</span><span class="p">(</span><span class="nv">$firstData</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$thirdData</span> <span class="o">=</span><span class="nv">$firstData</span><span class="p">[</span><span class="nv">$secondData</span><span class="p">];</span>
</span><span class='line'>      <span class="nv">$finalData</span> <span class="o">=</span> <span class="nv">$thirdData</span><span class="p">[</span><span class="s1">&#39;review_id&#39;</span><span class="p">];</span>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$finalData</span><span class="p">;</span>        
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getPhotosByReviewId</span><span class="p">(</span><span class="nv">$reviewId</span><span class="p">){</span>
</span><span class='line'>      <span class="c1">//$reviewId=$this-&gt;getTopReviewsIdByPhotos();   </span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">from</span><span class="p">(</span><span class="s1">&#39;cosme_review_pic&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">select</span><span class="p">(</span><span class="s1">&#39;review_id,pic_id&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">where</span><span class="p">(</span><span class="s1">&#39;review_id&#39;</span><span class="p">,</span><span class="nv">$reviewId</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$query</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$returnData</span> <span class="o">=</span> <span class="nv">$query</span><span class="o">-&gt;</span><span class="na">result_array</span><span class="p">();</span>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$returnData</span><span class="p">;</span>
</span><span class='line'>      
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getPhotosIdsByReviewId</span><span class="p">(</span><span class="nv">$reviewId</span><span class="p">){</span>
</span><span class='line'>      <span class="nv">$returnData</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span> 
</span><span class='line'>      <span class="nv">$picIds</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getPhotosByReviewId</span><span class="p">(</span><span class="nv">$reviewId</span><span class="p">);</span>
</span><span class='line'>      <span class="k">foreach</span> <span class="p">(</span><span class="nv">$picIds</span> <span class="k">as</span> <span class="nv">$value</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nv">$returnData</span><span class="p">[]</span> <span class="o">=</span> <span class="nv">$value</span><span class="p">[</span><span class="s1">&#39;pic_id&#39;</span><span class="p">];</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$returnData</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getPhotosUrl</span><span class="p">(</span><span class="nv">$reviewId</span><span class="p">){</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nb">isset</span><span class="p">(</span><span class="nv">$reviewId</span><span class="p">)){</span>
</span><span class='line'>          <span class="k">echo</span> <span class="s2">&quot;Warning Message.It might be wrong!!!!Photos didn&#39;t response to review!!!&lt;br&gt;&quot;</span><span class="p">;</span>
</span><span class='line'>          <span class="nv">$reviewId</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getTopReviewsIdByPhotos</span><span class="p">();</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nv">$returnData</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span> 
</span><span class='line'>      <span class="nv">$picIds</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getPhotosIdsByReviewId</span><span class="p">(</span><span class="nv">$reviewId</span><span class="p">);</span>
</span><span class='line'>      <span class="k">foreach</span> <span class="p">(</span><span class="nv">$picIds</span> <span class="k">as</span> <span class="nv">$picId</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nv">$strPicUrl</span> <span class="o">=</span> <span class="s2">&quot;http://img2.urcosme.com:901/api/productApi/reviewimage/pic_id/&quot;</span><span class="o">.</span><span class="nv">$picId</span><span class="o">.</span><span class="s2">&quot;/format/json&quot;</span><span class="p">;</span>
</span><span class='line'>          <span class="nv">$returnData</span><span class="p">[]</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getUrlArray</span><span class="p">(</span><span class="nv">$strPicUrl</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$returnData</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="c1">//撈側邊欄廣告，猜測這裡撈的是活動新幹線的資料</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getAdsBanner</span><span class="p">(</span><span class="nv">$startDate</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nv">$dateOffset</span> <span class="o">=</span> <span class="mi">0</span><span class="p">){</span>
</span><span class='line'>      <span class="nv">$endDate</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getDateOffSet</span><span class="p">(</span><span class="nv">$dateOffset</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$startDate</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">getStartDate</span><span class="p">(</span><span class="nv">$startDate</span><span class="p">,</span><span class="nv">$endDate</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">from</span><span class="p">(</span><span class="s1">&#39;cosme_ads_banner&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">like</span><span class="p">(</span><span class="s1">&#39;start_date&#39;</span><span class="p">,</span> <span class="s1">&#39;2012-05-07&#39;</span><span class="p">,</span> <span class="s1">&#39;after&#39;</span><span class="p">);</span><span class="c1">//撈當天所有時間</span>
</span><span class='line'>      <span class="c1">//$this-&gt;db-&gt;where(&#39;start_date&#39;,&#39;2012-05-07&#39;);//只撈當天00：00：00</span>
</span><span class='line'>      <span class="nv">$query</span> <span class="o">=</span> <span class="nv">$this</span><span class="o">-&gt;</span><span class="na">db</span><span class="o">-&gt;</span><span class="na">get</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$returnData</span><span class="p">[</span><span class="s1">&#39;cosme_ads_banner&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="nv">$query</span><span class="o">-&gt;</span><span class="na">result_array</span><span class="p">();</span>
</span><span class='line'>      <span class="k">return</span> <span class="nv">$returnData</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>    <span class="c1">//文藝大大分享的處理方法</span>
</span><span class='line'>  <span class="k">public</span> <span class="k">function</span> <span class="nf">getUrlArray</span><span class="p">(</span><span class="nv">$strUrl</span><span class="p">){</span>
</span><span class='line'>      <span class="nv">$return_data</span> <span class="o">=</span> <span class="k">array</span><span class="p">();</span>
</span><span class='line'>      <span class="nv">$curl</span> <span class="o">=</span> <span class="nb">curl_init</span><span class="p">();</span>
</span><span class='line'>      <span class="c1">//設置相關的url 關的url</span>
</span><span class='line'>      <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$curl</span><span class="p">,</span> <span class="nx">CURLOPT_URL</span><span class="p">,</span> <span class="nv">$strUrl</span><span class="p">);</span>
</span><span class='line'>      <span class="c1">//設置header</span>
</span><span class='line'>      <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$curl</span><span class="p">,</span> <span class="nx">CURLOPT_HEADER</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
</span><span class='line'>      <span class="c1">//要求顯示出螢幕上</span>
</span><span class='line'>      <span class="nb">curl_setopt</span><span class="p">(</span><span class="nv">$curl</span><span class="p">,</span> <span class="nx">CURLOPT_RETURNTRANSFER</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
</span><span class='line'>      <span class="c1">//執行</span>
</span><span class='line'>      <span class="nv">$return_data</span> <span class="o">=</span> <span class="nb">curl_exec</span><span class="p">(</span><span class="nv">$curl</span><span class="p">);</span>
</span><span class='line'>      <span class="c1">//關閉連線</span>
</span><span class='line'>        <span class="nb">curl_close</span><span class="p">(</span><span class="nv">$curl</span><span class="p">);</span>
</span><span class='line'>        <span class="nv">$return_data</span> <span class="o">=</span> <span class="nb">json_decode</span><span class="p">(</span><span class="nv">$return_data</span><span class="p">,</span><span class="k">true</span><span class="p">);</span>
</span><span class='line'>        <span class="k">return</span> <span class="nv">$return_data</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="cp">?&gt;</span><span class="x"></span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>6</li>
</ul>

]]></content>
  </entry>
  
</feed>
